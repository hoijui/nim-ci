#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2021 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: Unlicense

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
#set -Eeu

APP_NAME="Nim Version Fetcher"

function print_help() {

	script_name="$(basename "$0")"
	echo "$APP_NAME - Fetches the latest release version Nim(lang) from the github repo."
	echo "Echos for example: 1.4.8"
	echo
	echo "Usage:"
	echo "  $script_name [OPTIONS]"
	echo "Options:"
	echo "  -h, --help              Show this usage info and exit"
}

# read command-line args
POSITIONAL=()
while [[ $# -gt 0 ]]
do
	arg="$1"
	shift # past arg

	case "$arg" in
		-h|--help)
			print_help
			exit 0
			;;
		*) # non-/unknown option
			POSITIONAL+=("$arg") # save it in an array for later
			;;
	esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

NIM_GITHUB_REPO='nim-lang/Nim'
tmp_html='build/nim_tags.html'
mkdir -p "$(dirname "$tmp_html")"
curl -Ssf "https://github.com/$NIM_GITHUB_REPO/tags" \
	--output "$tmp_html"
# NOTE Semver sorting trickery taken from StackOverflow:
#      <https://stackoverflow.com/a/40391207/586229>
NIM_VERSION="$( \
	grep -Eo 'archive/refs/tags/[^/]+\.tar\.gz' \
		< "$tmp_html" \
		| sed -e 's|.*/v\?||g; s|.tar.gz$||g' \
		| sed '/-/!{s/$/_/;}; s/-patch/_patch/' \
		| sort -V \
		| sed 's/_$//; s/_patch/-patch/' \
		| tail -1)"
rm "$tmp_html"

if [ -z "$NIM_VERSION" ]
then
	>&2 echo "ERROR: Failed fetching latest nim version."
	exit 1
fi

echo -n "$NIM_VERSION"
