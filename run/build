#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2021 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: Unlicense

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
#set -Eeu

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
proj_dir="$(cd "$script_dir"/..; pwd)"
build_dir="$proj_dir/build"

APP_NAME="Docker Image Builder"

function print_help() {

	script_name="$(basename "$0")"
	echo "$APP_NAME - Builds this repos docker image."
	echo
	echo "Usage:"
	echo "  $script_name [OPTIONS]"
	echo "Options:"
	echo "  -h, --help"
	echo "    Show this usage info and exit"
}

# read command-line args
POSITIONAL=()
while [[ $# -gt 0 ]]
do
	arg="$1"
	shift # past arg

	case "$arg" in
		-h|--help)
			print_help
			exit 0
			;;
		*) # non-/unknown option
			POSITIONAL+=("$arg") # save it in an array for later
			;;
	esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

cd "$proj_dir"

# generate Dockerfile_REPLACED
"$script_dir/inject-dockerfile"

# build the docker image
echo "Building docker image "
docker \
	-D \
	-l debug \
	build \
		--file "$build_dir/Dockerfile_REPLACED" \
		--progress=plain \
		"$@" \
		.
